% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/py_extract_quadpolyID.R
\name{py_extract_quadpolyID}
\alias{py_extract_quadpolyID}
\title{Extract eCognition quadpolygon IDs to field data or covariates}
\usage{
py_extract_quadpolyID(
  py.path = "C:/Python27/ArcGIS10.6/python.exe",
  fielddata.path,
  quad.path = "default",
  output.gdb.path,
  output.folder.path,
  output.dbf,
  output.RData = "None",
  intercept.feature = "None",
  newgdb.name = "None",
  quad.sel = "None"
)
}
\arguments{
\item{py.path}{Character string of file path to ArcGIS installed version of
Python (required for running 'arcpy' module). Default is the file path where
this is typically stored by ESRI. Function will not run without a valid
version of ArcGIS installed before hand and must be run in a 32-bit R
session.}

\item{fielddata.path}{Character string of file path to geodatabase or
shapefile containing coordinates of field data or a shapefile of the target
spatial extent in the case of prediction covariates (Must be transformed to
IDTM before running function). If a geodatabase, then must include an
argument for the parameter 'intercept.feature'.}

\item{quad.path}{Character string of file path to a geodatabase containing the
eCognition polygons. The parameter will accept any valid file path to a
geodatabase. "Default" produces a menu in the command prompt for the two
quadpolygon geodatabases on the 'HQWildStat' network drive. "ID Only" leads
to the blank quadpolygons; best choice for extracting IDs for field data.
"Covariates" leads to the quadpolygons containing the covariate data.}

\item{output.gdb.path}{Character string of file path to a valid geodatabase or
folder. If path is to a folder, then must provide an argument for
newgdb.name. This will prompt the python script to create a new *.gdb for
storing output files.}

\item{output.folder.path}{Character string of file path to a valid folder for
containing output *.dbf tables. This function now includes the ability now
to create the specified folder along the file path if it does not already
exist.}

\item{output.dbf}{Character string containing the name of a new table in which
the function will merge all output tables within the output.folder.path into
one table. String must contain *.dbf. name Currently no default.}

\item{output.RData}{Character string containing the name of an *.RData file
for storing the formatted and merged data table. String must contain
'.RData'. The default ("None") auto-generates a name based on the choice of
quad.path geodatabase, either "FieldDataPoints_QuadPolyID.RData" if
"blank_polys100k.gdb" or "Covariates_QuadPolyID.RData" if "poly_merges.gdb".}

\item{intercept.feature}{Character string containing the name of a file within
a fielddata.path geodatabase. Default ("None") assumes the parameter
fielddata.path leads to a shapefile.}

\item{newgdb.name}{Character string containing the name of a new geodatabase
for storing output shapefile. Default ("None") assumes the parameter
output.gdb.path leads to a valid geodatabase.}

\item{quad.sel}{Character string or vector containing the names of eCognition
quadpolygons, limits the function to looping through only the selected
polygons. Default ("None") will loop through all polygons. Still buggy with
vectors (issues with Python reading an R vector as a valid Python list);
Recommended to only use for individual 100k polygon selections.}
}
\value{
An R object containing merged and formatted output tables containing
either field data coordinates associated with QuadPoly_IDs or covariates for
eCognition polygons associated with provided field data. These will be used
later for running machine learning suite of models for predicting fine scale
vegetation presence/absence and percent cover. Object is saved in the
provided file path (output.folder.path).
}
\description{
Leverages the power of Python and ArcGIS using interpreter 'reticulate' to
call a Python script. Creates a data frame containing merged and formatted
field data or covariates associated with eCognition QuadPoly_IDs.
}
\section{Troubleshooting}{
 This function can be very finicky because of the
Python-to-R interfacing. Crashing can be common if the parameters are not
specified exactly. After a crash, the best thing to do is save your work and
restart R (Ctrl + Shift + F10) and/or close R completely and reopen it. This
is to make sure the connection to the file geodatabase is completely closed
before trying to proceed. In the current version, it is best to leave the
parameter 'quad.sel' at its default of 'None'. Otherwise, a character string
with the exact name of a single specific quadpolygon may also work. Passing
a list to python from R does not work well (yet).
}

\examples{
# # NOT RUN:
>FieldDataPoints_QuadPolyID<- py_extract_quadpolyID(
    fielddata.path= here(file.path('data','new_field_data.shp')),
    output.gdb.path= here(file.path('output')),
    output.folder.path= here(file.path('output','output_tables_folder')),
    output.dbf= 'MERGED.dbf',
    newgdb.name = 'output.gdb')

>head(FieldDataPoints_QuadPolyID)
  QuadPoly_ID     quad PlotKey TranKey Easting Northing Shape_Length Shape_Area
q46115b6_6998  q46115b6     06A     06A 2367255 1671374         2688       6106
q46115b6_14717 q46115b6     10A     10A 2367548 1669244         5636      14964
q46115b8_46652 q46115b8  MFCL03  MFCL03 2349138 1661092         1040       3034

# # END NOT RUN
}
